///////////////////////////////////////////////////////////
//  TMCSVirtualServer.cs
//  Implementation of the Class TMCSVirtualServer
//  Generated by Enterprise Architect
//  Created on:      07-8-2023 ø¿»ƒ 5:24:52
//  Original author: ±Ë¿«º≠
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using TcmsSimulator.Socket;
using System.Net.Sockets;
using System.Configuration;
using System.Threading;
using TcmsSimulator.TCMSData;

namespace TcmsSimulator.TMCSVirtual
{
	public class TMCSVirtualStatusServer
	{
		private TCPSocketServer _TmcsVirtualStatus = null;

		public TCPSocketServer TCMSStatusServer
		{
			get { return _TmcsVirtualStatus; }
		}

		public TMCSVirtualStatusServer()
		{
			int bufferSize;
			int StatusPort;
			ProtocolType protocolType;
			SocketType socketType;

			string StatusIP = ConfigurationManager.AppSettings["StatusIP"];
			int.TryParse(ConfigurationManager.AppSettings["BufferSize"], out bufferSize);
			int.TryParse(ConfigurationManager.AppSettings["StatusPort"], out StatusPort);

			protocolType = TcmsSimulator.Util.EnumUtil<ProtocolType>.Parse(ConfigurationManager.AppSettings["ProtocolType"]);
			socketType = TcmsSimulator.Util.EnumUtil<SocketType>.Parse(ConfigurationManager.AppSettings["SocketType"]);

			_TmcsVirtualStatus = new TCPSocketServer(bufferSize, StatusIP, StatusPort, protocolType, socketType);
		}

		~TMCSVirtualStatusServer()
		{
			if(_TmcsVirtualStatus.isRunning == true)
				_TmcsVirtualStatus.Stop();
		}

		public void SetData(int bufferSize, string OperationIP, int OperationPort, ProtocolType protocolType, SocketType socketType)
		{
			_TmcsVirtualStatus.SetData(bufferSize, OperationIP, OperationPort, protocolType, socketType);
		}

		public void StartStatus()
		{
			_TmcsVirtualStatus.Start();
		}
	}//end TMCSVirtualServer
}